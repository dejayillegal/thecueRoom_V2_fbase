name: Deploy to GitHub Pages

on:
  push:
    branches: [ main ]
  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: true

jobs:
  build:
    runs-on: ubuntu-latest
    outputs:
      pages_enabled: ${{ steps.pages_status.outputs.enabled }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: ${{ vars.NODE_VERSION || '20.19.5' }}
          cache: 'npm'
          cache-dependency-path: package-lock.json

      - name: Install dependencies
        run: npm ci

      - name: Verify no Firebase admin JSON leaked
        run: |
          if ls **/*-firebase-adminsdk-*.json 1> /dev/null 2>&1; then
            echo "Found leaked Firebase admin JSON. Remove it before deploying." >&2
            exit 1
          fi

      - name: Build web
        env:
          NEXT_PUBLIC_BASE_PATH: ${{ vars.NEXT_PUBLIC_BASE_PATH }}
          NEXT_PUBLIC_SITE_URL: ${{ vars.NEXT_PUBLIC_SITE_URL }}
          NEXT_PUBLIC_SUPABASE_URL: ${{ vars.NEXT_PUBLIC_SUPABASE_URL }}
          NEXT_PUBLIC_SUPABASE_ANON_KEY: ${{ secrets.NEXT_PUBLIC_SUPABASE_ANON_KEY || vars.NEXT_PUBLIC_SUPABASE_ANON_KEY }}
        run: |
          npm run build --workspace @thecueroom/web

      - name: Check GitHub Pages status
        id: pages_status
        uses: actions/github-script@v7
        with:
          script: |
            try {
              await github.rest.repos.getPages({
                owner: context.repo.owner,
                repo: context.repo.repo,
              });
              core.info('GitHub Pages is enabled for this repository.');
              core.setOutput('enabled', 'true');
            } catch (error) {
              if (error.status === 404) {
                core.warning('GitHub Pages is not enabled for this repository. Skipping deployment steps.');
                core.setOutput('enabled', 'false');
              } else {
                throw error;
              }
            }

      - name: Setup Pages
        if: steps.pages_status.outputs.enabled == 'true'
        uses: actions/configure-pages@v5

      - name: Upload artifact
        if: steps.pages_status.outputs.enabled == 'true'
        uses: actions/upload-pages-artifact@v3
        with:
          path: "apps/web/out"

  deploy:
    if: needs.build.outputs.pages_enabled == 'true'
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
